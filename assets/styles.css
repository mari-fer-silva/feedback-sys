 :root {
      --primary: #2777c2;
      --primary-dark: #2387e4;
      --primary-light: #5d9cec;
      --accent: #024e96;
      --accent-light: #3a7bd5;
      --dark: #2d3436;
      --darker: #1a1e1f;
      --light: #f5f7fa;
      --lighter: #ffffff;
      --gray: #dfe6e9;
      --gray-dark: #bdc3c7;
      --success: #2ecc71;
      --error: #e74c3c;
      --warning: #f39c12;

      --shadow-sm: 0 2px 5px rgba(0,0,0,0.08);
      --shadow-md: 0 5px 15px rgba(0,0,0,0.1);
      --shadow-lg: 0 10px 30px rgba(0,0,0,0.12);
      --shadow-xl: 0 15px 40px rgba(0,0,0,0.16);

      --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
      --transition-fast: all 0.15s ease;
      --transition-slow: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.1);

      --border-radius: 12px;
      --border-radius-sm: 8px;
      --border-radius-lg: 16px;

      /* Tipografia fluida */
      --fs-xs: clamp(0.8rem, 0.75rem + 0.2vw, 0.9rem);
      --fs-sm: clamp(0.9rem, 0.85rem + 0.3vw, 1rem);
      --fs-md: clamp(1rem, 0.95rem + 0.4vw, 1.125rem);
      --fs-lg: clamp(1.125rem, 1rem + 1vw, 1.5rem);
      --fs-xl: clamp(1.4rem, 1.1rem + 2vw, 2rem);

      /* Espaços fluidos */
      --sp-1: clamp(6px, 0.25rem + 0.3vw, 10px);
      --sp-2: clamp(10px, 0.5rem + 0.4vw, 14px);
      --sp-3: clamp(14px, 0.75rem + 0.5vw, 18px);
      --sp-4: clamp(18px, 1rem + 0.6vw, 24px);
      --sp-5: clamp(24px, 1.25rem + 0.8vw, 32px);
      --sp-6: clamp(28px, 1.5rem + 1vw, 40px);
      
      /* Novas variáveis para melhor responsividade */
      --container-padding: clamp(12px, 3vw, 24px);
      --input-padding-vertical: clamp(10px, 2.5vw, 14px);
      --input-padding-horizontal: clamp(12px, 3vw, 16px);
      --section-spacing: clamp(20px, 5vw, 40px);
    }

    @import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700;800&display=swap');

    *,
    *::before,
    *::after {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html {
      -webkit-text-size-adjust: 100%;
    }

    body {
      font-family: 'Nunito', sans-serif;
      background: linear-gradient(135deg, var(--light) 0%, #e4e8f0 100%);
      min-height: 100vh;
      margin: 0;
      color: var(--dark);
      line-height: 1.6;
      padding: 0;
      background-attachment: fixed;
      -webkit-font-smoothing: antialiased;
      font-size: var(--fs-sm);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    .container {
      width: min(94vw, 860px);
      margin: var(--sp-4) 0;
      background: var(--lighter);
      border-radius: var(--border-radius);
      overflow: hidden;
      box-shadow: var(--shadow-lg);
      position: relative;
      transform: translateY(0);
      transition: var(--transition);
      border: 1px solid rgba(255,255,255,0.3);
    }

    .container:hover {
      transform: translateY(-3px);
      box-shadow: var(--shadow-xl);
    }

    .header {
      background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
      color: var(--lighter);
      padding: var(--section-spacing) var(--container-padding);
      text-align: center;
      position: relative;
      overflow: hidden;
    }

    .header::before {
      content: "";
      position: absolute;
      inset: -50% -50% auto auto;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0) 70%);
      transform: rotate(30deg);
      animation: shine 8s infinite linear;
    }

    @keyframes shine {
      0%   { transform: rotate(30deg) translate(-10%, -10%); }
      100% { transform: rotate(30deg) translate(10%, 10%); }
    }

    .header h2 {
      margin: 0;
      font-size: clamp(1.5rem, 5vw, 2.2rem);
      font-weight: 800;
      position: relative;
      text-shadow: 0 2px 4px rgba(0,0,0,0.15);
      letter-spacing: 0.5px;
      line-height: 1.2;
    }

    .form-content {
      padding: var(--section-spacing) var(--container-padding);
      position: relative;
    }

    .form-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(min(100%, 300px), 1fr));
      gap: clamp(16px, 4vw, 24px);
    }

    .input-group {
      margin-bottom: clamp(12px, 3vw, 20px);
      position: relative;
      transition: var(--transition);
    }

    .input-group.full-width {
      grid-column: 1 / -1;
    }

    .input-group label {
      display: block;
      margin-bottom: clamp(8px, 2vw, 12px);
      font-weight: 700;
      color: var(--darker);
      font-size: var(--fs-sm);
      position: relative;
      padding-left: 16px;
      transition: var(--transition);
    }

    /* Campos */
    input, select, textarea {
      width: 100%;
      padding: var(--input-padding-vertical) var(--input-padding-horizontal);
      border: 2px solid var(--gray);
      border-radius: 10px;
      font-size: clamp(0.9rem, 2.5vw, 1rem);
      transition: var(--transition);
      background-color: var(--lighter);
      font-family: 'Nunito', sans-serif;
      box-shadow: var(--shadow-sm);
      min-height: 52px;
    }

    input:focus, select:focus, textarea:focus {
      border-color: var(--primary-light);
      outline: none;
      box-shadow: 0 0 0 4px rgba(39, 119, 194, 0.2);
      transform: translateY(-1px);
    }

    input::placeholder, textarea::placeholder {
      color: var(--gray-dark);
      opacity: 0.9;
    }

    select {
      appearance: none;
      background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%232d3436' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right 14px center;
      background-size: 1em;
      cursor: pointer;
    }

    textarea {
      min-height: 160px;
      resize: vertical;
      line-height: 1.6;
    }

    .button-container {
      grid-column: 1 / -1;
      text-align: center;
      margin-top: clamp(20px, 5vw, 30px);
      display: flex;
      justify-content: center;
    }

    button {
      background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
      color: white;
      border: none;
      padding: clamp(12px, 3vw, 16px) clamp(16px, 4vw, 24px);
      font-size: var(--fs-md);
      border-radius: 10px;
      cursor: pointer;
      transition: var(--transition);
      font-weight: 700;
      position: relative;
      overflow: hidden;
      box-shadow: 0 10px 20px rgba(108, 92, 231, 0.25);
      width: 100%;
      max-width: 300px;
      min-height: 52px;
    }

    button::after {
      content: "";
      position: absolute;
      inset: 0;
      left: -100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      transition: 0.6s;
    }

    button:hover {
      transform: translateY(-2px);
      box-shadow: 0 15px 30px rgba(108, 92, 231, 0.35);
    }

    button:hover::after {
      left: 100%;
    }

    /* Floating Robot */
    .floating-robot {
      position: fixed;
      bottom: max(16px, env(safe-area-inset-bottom));
      right: max(16px, env(safe-area-inset-right));
      z-index: 1000;
      filter: drop-shadow(0 5px 15px rgba(0,0,0,0.2));
      animation: float 3s ease-in-out infinite;
      transition: var(--transition);
      touch-action: manipulation;
    }

    .robot {
      width: clamp(80px, 20vw, 160px);
      height: auto;
      cursor: pointer;
      transition: var(--transition-slow);
    }

    .robot:hover {
      transform: scale(1.05) rotate(8deg);
      filter: drop-shadow(0 8px 20px rgba(0,0,0,0.3));
    }

    .speech-bubble {
      position: absolute;
      bottom: calc(100% + 12px);
      right: 70%;
      transform: translateX(50%);
      background-color: var(--lighter);
      padding: 10px 14px;
      border-radius: 16px;
      box-shadow: var(--shadow-lg);
      margin-bottom: 10px;
      opacity: 0;
      transition: var(--transition);
      width: max-content;
      max-width: min(220px, 80vw);
      font-size: clamp(0.8rem, 2.5vw, 0.9rem);
      text-align: center;
      pointer-events: none;
      font-weight: 600;
      color: var(--darker);
    }

    .speech-bubble::after {
      content: '';
      position: absolute;
      top: 100%;
      left: 50%;
      transform: translateX(-50%);
      border: 10px solid transparent;
      border-top-color: var(--lighter);
    }

    .floating-robot:hover .speech-bubble {
      opacity: 1;
      transform: translateX(50%) translateY(-4px);
    }

    /* Modal */
    .modal {
      position: fixed;
      inset: 0;
      width: 100%;
      height: 100%;
      background-color: color-mix(in oklab, #000 50%, transparent);
      display: flex;
      justify-content: center;
      align-items: center;
      padding: max(16px, env(safe-area-inset-top)) max(16px, env(safe-area-inset-right)) 
              max(16px, env(safe-area-inset-bottom)) max(16px, env(safe-area-inset-left));
      z-index: 1000;
    }

    .modal.hidden { 
      display: none; 
    }

    .modal-content {
      background-color: white;
      padding: clamp(20px, 5vw, 32px);
      border-radius: 12px;
      width: min(94vw, 640px);
      max-height: 80vh;
      overflow-y: auto;
      box-shadow: var(--shadow-md);
    }

    .modal-content h3 {
      color: var(--primary);
      margin-top: 0;
      font-size: var(--fs-lg);
    }

    .modal-content button {
      margin-top: var(--sp-3);
      margin-right: var(--sp-2);
      padding: 10px 18px;
      min-width: auto;
    }

    #resumo-dados {
      margin: var(--sp-3) 0;
      line-height: 1.6;
    }

    /* Animações */
    @keyframes float { 
      0%, 100% { transform: translateY(0px); } 
      50% { transform: translateY(-12px); } 
    }

    @keyframes pulse { 
      0%, 100% { transform: scale(1); } 
      50% { transform: scale(1.05); } 
    }

    .pulse { 
      animation: pulse 2s infinite ease-in-out; 
    }

    /* Acessibilidade: reduz animação se preferido */
    @media (prefers-reduced-motion: reduce) {
      * { 
        animation: none !important; 
        transition: none !important; 
      }
    }

    /* Feedback de erro */
    .error-message {
      color: var(--error);
      font-size: 0.85rem;
      margin-top: 5px;
      display: block;
      font-weight: 600;
    }

    .input-error {
      border-color: var(--error) !important;
    }

    .input-error:focus {
      box-shadow: 0 0 0 4px rgba(231, 76, 60, 0.2) !important;
    }

    /* Spinner */
    .spinner {
      display: inline-block;
      width: 20px;
      height: 20px;
      border: 3px solid rgba(255,255,255,0.3);
      border-radius: 50%;
      border-top-color: var(--lighter);
      animation: spin 1s ease-in-out infinite;
      margin-right: 10px;
      vertical-align: middle;
    }

    @keyframes spin { 
      to { transform: rotate(360deg); } 
    }

    /* Classes utilitárias para elementos ocultos */
    .hidden {
      display: none !important;
    }

    /* ===================== */
    /*        Breakpoints    */
    /* ===================== */

    /* Breakpoint para tablets */
    @media (max-width: 768px) {
      body {
        padding: 12px;
        justify-content: flex-start;
        min-height: 100vh;
      }
      
      .container {
        margin: 0 auto;
        width: 100%;
        border-radius: 12px;
      }
      
      .form-grid {
        grid-template-columns: 1fr;
        gap: clamp(12px, 3vw, 20px);
      }
      
      .header {
        padding: var(--sp-4) var(--container-padding);
      }
      
      .floating-robot {
        bottom: max(12px, env(safe-area-inset-bottom));
        right: max(12px, env(safe-area-inset-right));
      }
    }

    /* Breakpoint para smartphones médios */
    @media (max-width: 600px) {
      body {
        font-size: var(--fs-xs);
        padding: 10px;
      }
      
      .container {
        border-radius: 10px;
        box-shadow: var(--shadow-md);
      }
      
      .modal-content {
        width: 96vw;
        padding: var(--sp-4);
      }
      
      .form-content {
        padding: var(--sp-4) var(--container-padding);
      }
    }

    /* Breakpoint para smartphones pequenos */
    @media (max-width: 480px) {
      body {
        padding: 8px;
      }
      
      .header {
        padding: var(--sp-4) var(--container-padding);
      }
      
      .speech-bubble {
        display: none;
      }
      
      .floating-robot {
        bottom: max(10px, env(safe-area-inset-bottom));
        right: max(10px, env(safe-area-inset-right));
      }
      
      .robot {
        width: 70px;
      }
      
      button {
        padding: 14px 18px;
      }
      
      input, select, textarea {
        min-height: 56px;
        font-size: 16px; /* Previne zoom no iOS */
      }
    }

    /* Breakpoint para smartphones muito pequenos */
    @media (max-width: 360px) {
      .container {
        border-radius: 8px;
      }
      
      .header h2 {
        font-size: 1.4rem;
      }
      
      .floating-robot {
        display: none;
      }
      
      .form-content {
        padding: var(--sp-3) var(--sp-2);
      }
    }

    /* Melhorias de acessibilidade para formulário em mobile */
    @media (pointer: coarse) {
      input, select, textarea, button {
        min-height: 56px;
      }
      
      select {
        padding-right: 44px;
      }
    }

    /* Suporte para modo escuro - CORRIGIDO */
    /* Mantemos o fundo claro mesmo no modo escuro */
    @media (prefers-color-scheme: dark) {
      .container {
        background: var(--lighter); /* Força fundo claro */
        color: var(--dark); /* Força texto escuro */
        border-color: rgba(255,255,255,0.1);
      }
      
      input, select, textarea {
        background-color: var(--lighter); /* Fundo claro para inputs */
        color: var(--dark); /* Texto escuro */
        border-color: var(--gray); /* Borda padrão */
      }
    }